!<arch>
0-isupper.c     1570838048  501   20    100644  275       `
#include "holberton.h"
/**
 * _isupper - checks if the entry char is uppercase or not
 *
 *@c: entry character
 *
 * Return: 1 if uppercase, 0 otherwise.
 */
int _isupper(int c)
{
  if (c >= 65 && c <= 90)
    {
      return (1);
    }
  else
    {
      return (0);
    }
}

0-memset.c      1570837935  501   20    100644  361       `
#include "holberton.h"

/**
 * _memset - fills n bytes of the memory pointed by 's' with the byte 'b'.
 *
 * @s: entry string.
 * @b: byte to fill.
 * @n: n bytes to be filled.
 *
 * Return: returns the pointer value.
 */

char *_memset(char *s, char b, unsigned int n)
{
  unsigned int i;

  for (i = 0; i < n; i++)
    {
      s[i] = b;
    }
  return (s);
}

0-strcat.c      1570838227  501   20    100644  450       `
#include "holberton.h"

/**
 * *_strcat - appends the src string to the dest string.
 *
 * @dest: string 1, where the funcion is going to append.
 * @src: string to be apendd.
 *
 * Return: returns the final value of both srings.
 */

char *_strcat(char *dest, char *src)
{
  int i, j;

  for (i = 0; dest[i] != 0; i++)
    {
    }
  for (j = 0; src[j] != 0; j++)
    {
      dest[i] = src[j];
      i++;
    }

  dest[i] = '\0';

  return (dest);
}
1-isdigit.c     1570838337  501   20    100644  267       `
#include "holberton.h"
/**
 * _isdigit - checks if the entry char is digit or not
 *
 *@c: entry character
 *
 * Return: 1 if digit, 0 otherwise.
 */
int _isdigit(int c)
{
  if (c >= 48 && c <= 57)
    {
      return (1);
    }
  else
    {
      return (0);
    }
}

1-memcpy.c      1570838384  501   20    100644  380       `
#include "holberton.h"

/**
 * _memcpy - copies n bytes from memory area src to memory area dest.
 *
 * @src: entry values.
 * @dest: memory area destiny.
 * @n: n bytes to copy.
 *
 * Return: returns the pointer value.
 */

char *_memcpy(char *dest, char *src, unsigned int n)
{
  unsigned int i;

  for (i = 0; i < n; i++)
    {
      dest[i] = src[i];
    }
  return (dest);
}
1-strncat.c     1570838494  501   20    100644  570       `
#include "holberton.h"
#include <stdio.h>

/**
 * *_strncat - appends the src string to the dest string.
 *
 * @dest: string 1, where the funcion is going to append.
 * @src: string to be apended.
 * @n: controls the position of the string to be printed.
 *
 * Return: returns the final value of dest string.
 */

char *_strncat(char *dest, char *src, int n)
{
  int i, j;

  for (i = 0; dest[i] != 0; i++)
    {
    }
  for (j = 0; src[j] != 0; j++)
    {
      if (j < n)
	{
	  dest[i] = src[j];
	  i++;
	}
      else
	{
	  dest[i] = '\0';
	}
    }
  return (dest);
}
100-atoi.c      1570838601  501   20    100644  20        `
int _atoi(char *s);
2-strchr.c      1570838663  501   20    100644  359       `
#include "holberton.h"

/**
 * _strchr - Returns a pointer to occurrence of c in the string s.
 *
 * @s: entry values.
 * @c: character to evaluate with.
 *
 * Return: returns the pointer value.
 */

char *_strchr(char *s, char c)
{
  int i;

  for (i = 0; s[i] != '0'; i++)
    {
      if (s[i] == c)
	{
	  s += i;
	  return (s);
	}
    }
  return ('\0');
}

2-strlen.c      1570838721  501   20    100644  250       `
#include "holberton.h"

/**
 * _strlen - prints the lenght of a string.
 *
 * @s: entry pointer character
 *
 * Return: returns the lenght of the string.
 */

int _strlen(char *s)
{
  int i;

  for (i = 0; s[i] != 0; i++)
    {
    }
  return (i);
}
2-strncpy.c     1570838804  501   20    100644  415       `
#include "holberton.h"
#include <stdio.h>

/**
 * *_strncpy - copies a string.
 *
 * @dest: string 1.
 * @src: string 2.
 * @n: control parameter.
 *
 * Return: returns the final value of dest string.
 */

char *_strncpy(char *dest, char *src, int n)
{
  int i;

  for (i = 0; i < n && src[i] != 0; i++)
    {
      dest[i] = src[i];
    }
  for (; i < n; i++)
    {
      dest[i] = '\0';
    }

  return (dest);
}

3-islower.c     1570838991  501   20    100644  297       `
#include "holberton.h"

/**
 * _islower - marks if a character is lowercase or uppercase
 *
 * @c: character to be checked
 *
 * Return: 0 for not lowercase. 1 for lowercase
 */

int _islower(int c)
{
  if (c >= 95 && c <= 122)
    {
      return (1);
    }
  else
    {
      return (0);
    }
}

3-puts.c        1570839034  501   20    100644  282       `
#include "holberton.h"

/**
 * _puts - writes the string s and a trailing newline to stdout.
 *
 * @str: entry pointer character
 *
 */

void _puts(char *str)
{
  int i;
  char c;

  for (i = 0; str[i] != 0; i++)
    {
      c = str[i];
      _putchar(c);
    }
  _putchar('\n');
}
3-strcmp.c      1570839087  501   20    100644  414       `
#include "holberton.h"

/**
 * *_strcmp - compares string values, position by position.
 *
 * @s1: string 1.
 * @s2: string 2.
 *
 * Return: returns the diff value of the strings.
 */

int _strcmp(char *s1, char *s2)
{
  int i = 0;

  while (s1[i] != 0)
    {
      if (s1[i] < s2[i])
	{
	  return (s1[i] - s2[i]);
	}
      else if (s1[i] > s2[i])
	{
	  return (s1[i] - s2[i]);
	}
      i++;
    }
  return (0);
}
3-strspn.c      1570839180  501   20    100644  451       `
#include "holberton.h"

/**
 * _strspn - Returns a pointer to occurrence of c in the string s.
 *
 * @s: string to be evaluated.
 * @accept: characters to evaluate with.
 *
 * Return: returns the pointer value.
 */

unsigned int _strspn(char *s, char *accept)
{
  unsigned int i, j, l = 0;

  for (i = 0; s[i] != ' '; i++)
    {
      for (j = 0; accept[j] != '\0'; j++)
	{
	  if (s[i] == accept[j])
	    {
	      l++;
	    }
	}
    }
  return (l);
}

4-isaplha.c     1570837886  501   20    100644  314       `
#include "holberton.h"
/**
 * _isalpha - evaluates if is a letter
 *
 * @c: Character to be evaluated
 *
 * Return: 0 if not alpha
 */

int _isalpha(int c)
{
  if (c >= 95 && c <= 122)
    {
      return (1);
    }
  else if (c >=  65 && c <= 90)
    {
      return (1);
    }
  else
    {
      return (0);
    }
4-strpbrk.c     1570839227  501   20    100644  445       `
#include "holberton.h"

/**
 * _strpbrk - Returns a pointer to occurrence of c in the string s.
 *
 * @s: entry values.
 * @accept: character to evaluate with.
 *
 * Return: returns the pointer value.
 */

char *_strpbrk(char *s, char *accept)
{
  int i, j;

  for (i = 0; s[i] != '\0'; i++)
    {
      for (j = 0; accept[j] != '\0'; j++)
	{
	  if (s[i] == accept[j])
	    {
	      s += i;
	      return (s);
	    }
	}
    }
  return ('\0');
}

5-strstr.c      1570839268  501   20    100644  720       `
#include "holberton.h"

/**
 * _strstr - finds occurrence of substring needle in string haystack..
 *
 * @haystack: entry values.
 * @needle: character to evaluate with.
 *
 * Return: returns the pointer value.
 */

char *_strstr(char *haystack, char *needle)
{
  int i, j;

  if (*needle == 0)
    {
      return (haystack);
    }
  for (i = 0; haystack[i] != '\0'; i++)
    {
      for (j = 0; needle[j] != '\0'; j++)
	{
	  if (haystack[i + j] != needle[j])
	    {
	      break;
	    }
	  else if (needle[j] == '\0')
	    {
	      return (haystack + i);
	    }
	  else if (haystack[i] == needle[0] && haystack[i + 1] == needle[1])
	    {
	      haystack += i;
	      return (haystack);
	    }
	}
    }
  return (0);
}
6-abs.c         1570839757  501   20    100644  0         `
9-strcpy.c      1570839428  501   20    100644  326       `
#include "holberton.h"

/**
 * _strcpy - copies a string.
 *
 * @src:  pointer to the string.
 * @dest: string being pointed.
 *
 *
 * Return: the pointer to dest.
 */

char *_strcpy(char *dest, char *src)
{
  int i;

  for (i = 0; src[i] != '\0'; i++)
    {
      dest[i] = src[i];
    }
  dest[i] = '\0';
  return (dest);
}
_putchar.c      1570839480  501   20    100644  248       `
#include <unistd.h>

/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 *
 * Return: On success 1.
 * On error, -1 is returned, and errno is set appropriately.
 */
int _putchar(char c)
{
  return (write(1, &c, 1));
}
